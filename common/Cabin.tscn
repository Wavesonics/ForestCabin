[gd_scene load_steps=7 format=2]

[ext_resource path="res://common/assets/Cabin.glb" type="PackedScene" id=1]

[sub_resource type="VisualShaderNodeInput" id=1]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=2]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 8, 8, 8 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=3]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="VisualShader" id=4]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:3
	vec3 n_in3p1 = vec3(8.00000, 8.00000, 8.00000);
	vec3 n_out3p0 = n_out2p0 * n_in3p1;

// VectorOp:4
	vec3 n_in4p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out4p0 = mod(n_out3p0, n_in4p1);

// Output:0
	ALBEDO = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -425.107, 92.6739 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -280, 120 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -40, 120 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 160, 100 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 4, 0, 4, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )

[node name="Cabin" type="Spatial"]

[node name="Cabin" parent="." instance=ExtResource( 1 )]

[node name="Floor" type="CSGBox" parent="."]
use_collision = true
width = 100.0
height = 0.05
depth = 100.0
material = SubResource( 5 )
